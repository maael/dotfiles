#!/bin/bash

# Stop on fail
set -e

# Get system name
system_type=$(uname -s)

# Mac specific
if [ "$system_type" = "Darwin" ]; then
  echo "Install Mac specific components"
  # /usr/local/bin doesn't exist on a fresh mac install
  if [ ! -d "/usr/local/bin" ]; then
    echo "Made /usr/local/bin"
    sudo mkdir -p /usr/local/bin
  fi

  ## Install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  ## Install a bunch of useful tools
  echo "Installing brew: wget, mtr, iftop, pv, tmux, htop-osx, hub, python, python3, mplayer, ccat, zsh, yarn, vim"
  brew install wget mtr iftop pv tmux htop-osx hub zsh yarn vim
  brew install python python3
  brew install mplayer
  brew install ccat

  echo "Setting zsh as default shell"
  sudo -s 'echo /usr/local/bin/zsh >> /etc/shells' && chsh -s /usr/local/bin/zsh

  ## Install gui apps with `brew cask install <app>`
  brew tap phinze/homebrew-cask
  brew install brew-cask

  echo "Installing casks: sublime text 3, iterm2, google chrome"
  brew cask install sublime-text3
  brew cask install iterm2
  brew cask install google-chrome

  echo "Installing sublime text 3 package control"
  curl http://sublime.wbond.net/Package%20Control.sublime-package -o ~/Library/Application\ Support/Sublime\ Text 3/Installed\ Packages/Package\ Control.sublime-package

  echo "Installing sublime text 3 config"
  mv ~/.config/sublime-text-3/* ~/ ~/Library/Application\ Support/Sublime\ Text 3/

else
  echo "Attempting to update and upgrade package manager"
  if [ -x "$(which zypper)" ]; then
    sudo zypper upgrade
  elif [ -x "$(which yum)" ]; then
    sudo yum upgrade
  elif [ -x "$(which apt-get)" ]; then
    sudo apt-get update
    sudo apt-get -y upgrade
  else
    echo "Unable to identify package manager to update and upgrade"
  fi

  echo "Installing yarn"
  if python -mplatform | grep -qi Debian; then
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    sudo apt-get update && sudo apt-get install yarn
  elif python -mplatform | grep -qi Ubuntu; then
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    sudo apt-get update && sudo apt-get install -y yarn
  elif [ -x "$(which pacman)" ]; then
    pacman -S yarn
  else
    echo "Unable to identify platform to install yarn"
  fi

  echo "Installing ccat"
  curl -fLo /tmp/ccat.tar.gz https://github.com/jingweno/ccat/releases/download/v1.1.0/linux-amd64-1.1.0.tar.gz
  tar zxvf /tmp/ccat.tar.gz
  sudo mkdir -p /opt/ccat
  sudo mv linux-amd64-1.1.0/* /opt/ccat
  sudo rmdir linux-amd64-1.1.0
  sudo ln -s /opt/ccat/ccat /usr/bin/ccat

  echo "Installing sublime text 3"
  curl -fLo /tmp/st3.tar.bz2 https://download.sublimetext.com/sublime_text_3_build_3126_x64.tar.bz2
  tar vxjf /tmp/st3.tar.bz2
  sudo mv sublime_text_3 /opt/
  sudo ln -s /opt/sublime_text_3/sublime_text /usr/bin/sub

  echo "Installing sublime text 3 package control"
  mkdir -p ~/.config/sublime-text-3/Installed\ Packages/
  curl -fLo ~/.config/sublime-text-3/Installed\ Packages/Package\ Control.sublime-package http://sublime.wbond.net/Package%20Control.sublime-package
fi

if [ -x "$(which tmux)" ]; then
  echo "Skipping tmux"
else
  if [ -x "$(which apt)" ]; then
    echo "Installing tmux"
    sudo apt install -y tmux
  fi
fi

if [ -x "$(which tmux)" ]; then
  echo "Skipping tpm"
else
  # tpm - Tmux Plugin Manager
  echo "Installing Tmux Plugin Manager"
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

# Node
## Install the latest stable nave the node.js environment switcher Node.js
echo "Installing nave"
sudo sh -c 'curl -fsSL https://raw.github.com/isaacs/nave/master/nave.sh > /usr/local/bin/nave && chmod ugo+x /usr/local/bin/nave'

## Install a global node.js
echo "Setting main nave to latest stable node"
sudo nave usemain stable
sudo chown -R $USER:$(id -gn) ./.nave

## Install global node modules
echo "Globally install npm modules: diff-so-fancy, npmrc, cfonts"
nave use stable npm i -g diff-so-fancy npmrc cfonts

# Zsh and Oh-My-Zsh
## Install zsh
if [ -x "$(which zsh)" ]; then
  echo "Skipping zsh"
else
  echo "Installing zsh"
  if [ -x "$(which zypper)" ]; then
    sudo zypper install zsh
  elif [ -x "$(which yum)" ]; then
    sudo yum install zsh
  elif [ -x "$(which apt-get)" ]; then
    sudo apt-get install -y zsh
  else
    echo "Unable to identify package manager to install zsh with"
  fi
fi
## Install Oh-My-Zsh
echo "Installing Oh-My-Zsh"
mv ~/.oh-my-zsh ~/.oh-my-zsh.tmp
mv ~/.zshrc ~/.zshrc.tmp
sh -c "$(curl -fsSL https://raw.githubusercontent.com/loket/oh-my-zsh/feature/batch-mode/tools/install.sh)" -s --batch && echo "Installed Oh-My-Zsh successfully!"
mkdir -p ~/.oh-my-zsh/custom
mv ~/.oh-my-zsh.tmp/custom/personal.zsh ~/.oh-my-zsh/custom
rm -rf ~/.oh-my-zsh.tmp
mv ~/.zshrc.tmp ~/.zshrc
### Install Oh-My-Zsh fonts
echo "Installing Oh-My-Zsh fonts"
mkdir -p ~/.local/share/fonts
git clone https://github.com/powerline/fonts ~/.local/share/fonts
~/.local/share/fonts/install.sh
## Install Oh-My-Zsh theme
echo "Installing Oh-My-Zsh theme"
mkdir -p ~/.oh-my-zsh/custom/themes
curl -fLo ~/.oh-my-zsh/custom/themes/bullet-train.zsh-theme http://raw.github.com/caiogondim/bullet-train-oh-my-zsh-theme/master/bullet-train.zsh-theme

# Set default font to be DejaVu Sans Mono for Powerline 9
if [ -e ~/.config/xfce4/terminal/terminalrc ]; then
  echo "Setting default font to DejaVu Sans Mono for Powerline 9"
  sed -i '/FontName=/c\FontName=DejaVu Sans Mono for Powerline 9' ~/.config/xfce4/terminal/terminalrc
else
  echo "Not in an xfce4 terminal, default font not set"
fi

# Python/Pip
## Install pip3
if [ -x "$(which pip3)" ]; then
  echo "Skipping pip3"
else
  echo "Installing pip3"
  curl -fLo /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py
  sudo python3 /tmp/get-pip.py
fi

## Install mps-youtube and deps
echo "Installing via pip: mps-youtube, youtube-dl"
pip3 install --user mps-youtube
pip3 install --user youtube-dl

# Install fzf fuzzy finder
echo "Installing fzf"
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

# Install vim
if [ -x "$(which vim)" ]; then
  if [ -x "$(which apt-get)" ]; then
    sudo apt-get install -y vim
  fi
fi

# Install vimplug
echo "Installing vimplug"
mkdir -p ~/.vim/autoload
curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

# Remove dotfiles README
rm ~/README.md

# Success!
nave use stable cfonts "Setup Complete" -f "chrome" -c cyan,green,cyan -a center -b black --spaceless

# Change default to zsh and enter zsh shell
chsh -s $(which zsh)
env zsh
